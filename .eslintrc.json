{
  "extends": ["next/core-web-vitals", "next/typescript", "prettier"],
  "plugins": ["@typescript-eslint", "import"],
  "rules": {
    // 네이밍 컨벤션 규칙 설정
    "@typescript-eslint/naming-convention": [
      "error", // 규칙 위반 시 에러 발생
      {
        "selector": "variable", // 변수명에 대한 규칙
        "format": ["camelCase", "UPPER_CASE", "PascalCase"], // camelCase, UPPER_CASE, PascalCase 허용
        "leadingUnderscore": "allow" // 언더스코어로 시작하는 것 허용
      },
      {
        "selector": "function", // 함수명에 대한 규칙
        "format": ["camelCase", "PascalCase"] // camelCase, PascalCase(컴포넌트 함수) 허용
      },
      {
        "selector": "interface", // 인터페이스명에 대한 규칙
        "format": ["PascalCase"] // PascalCase만 허용
      },
      {
        "selector": "typeAlias", // 타입 별칭에 대한 규칙
        "format": ["PascalCase"] // PascalCase만 허용
      }
    ],
    // import문 다음에 빈 줄 1개 추가, 규칙 위반 시 에러 발생
    "import/newline-after-import": ["error", { "count": 1 }],
    // 특정 구문 사이에 빈 줄 추가
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always", // 항상 빈 줄 추가
        "prev": "const", // const 선언문 다음에
        "next": "return" // return 문 전에
      },
      // import문 사이에는 빈 줄 없이, import구문 다음에는 항상 빈 줄
      {
        "blankLine": "always",
        "prev": "import",
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": "import",
        "next": "import"
      }
    ],
    // React Hooks 기본 규칙 강제
    "react-hooks/rules-of-hooks": "error",
    // 사용하지 않는 변수 에러(_로 시작하는 매개변수는 허용)
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    // 재할당되지 않는 변수는 const 사용
    "prefer-const": "error",
    // var 사용 금지
    "no-var": "error"
  }
}
